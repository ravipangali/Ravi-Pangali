# Generated by Django 5.2.1 on 2025-07-16 23:39

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=30, verbose_name='Last Name')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone Number')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/', verbose_name='Profile Picture')),
                ('bio', models.TextField(blank=True, max_length=500, null=True, verbose_name='Bio')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website')),
                ('location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Location')),
                ('github', models.URLField(blank=True, null=True, verbose_name='GitHub')),
                ('linkedin', models.URLField(blank=True, null=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Twitter')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Instagram')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Facebook')),
                ('is_verified', models.BooleanField(default=False, verbose_name='Email Verified')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Premium User')),
                ('is_beta_tester', models.BooleanField(default=False, verbose_name='Beta Tester')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Last Login IP')),
                ('last_login_location', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Login Location')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, verbose_name='Failed Login Attempts')),
                ('account_locked_until', models.DateTimeField(blank=True, null=True, verbose_name='Account Locked Until')),
                ('timezone', models.CharField(default='UTC', max_length=50, verbose_name='Timezone')),
                ('language', models.CharField(default='en', max_length=10, verbose_name='Language')),
                ('theme', models.CharField(default='light', max_length=20, verbose_name='Theme')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Push Notifications')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Last Activity')),
                ('email_verification_token', models.CharField(blank=True, max_length=100, null=True)),
                ('email_verification_sent_at', models.DateTimeField(blank=True, null=True)),
                ('password_reset_token', models.CharField(blank=True, max_length=100, null=True)),
                ('password_reset_sent_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_verifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Email Verification',
                'verbose_name_plural': 'Email Verifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FirebaseApp',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='App Name')),
                ('project_id', models.CharField(max_length=100, verbose_name='Firebase Project ID')),
                ('project_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Project Name')),
                ('service_account_file', models.FileField(upload_to='firebase_services/', verbose_name='Service Account JSON File')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='firebase_apps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Firebase App',
                'verbose_name_plural': 'Firebase Apps',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FcmDevice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=500, unique=True, verbose_name='FCM Token')),
                ('device_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='Device ID')),
                ('device_type', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web'), ('unknown', 'Unknown')], default='unknown', max_length=20, verbose_name='Device Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('last_used', models.DateTimeField(auto_now=True, verbose_name='Last Used')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('firebase_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='myuser.firebaseapp')),
            ],
            options={
                'verbose_name': 'FCM Device',
                'verbose_name_plural': 'FCM Devices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=100, unique=True)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_resets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Password Reset',
                'verbose_name_plural': 'Password Resets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PushNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Notification Title')),
                ('body', models.TextField(verbose_name='Notification Body')),
                ('image_url', models.URLField(blank=True, null=True, verbose_name='Image URL')),
                ('data', models.JSONField(default=dict, verbose_name='Custom Data')),
                ('priority', models.CharField(choices=[('normal', 'Normal'), ('high', 'High')], default='high', max_length=10, verbose_name='Priority')),
                ('tokens_sent', models.PositiveIntegerField(default=0, verbose_name='Tokens Sent')),
                ('tokens_delivered', models.PositiveIntegerField(default=0, verbose_name='Tokens Delivered')),
                ('tokens_failed', models.PositiveIntegerField(default=0, verbose_name='Tokens Failed')),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('firebase_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='myuser.firebaseapp')),
            ],
            options={
                'verbose_name': 'Push Notification',
                'verbose_name_plural': 'Push Notifications',
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_title', models.CharField(blank=True, max_length=100, null=True)),
                ('company', models.CharField(blank=True, max_length=100, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('skills', models.JSONField(blank=True, default=list)),
                ('notification_preferences', models.JSONField(default=dict)),
                ('privacy_settings', models.JSONField(default=dict)),
                ('login_count', models.PositiveIntegerField(default=0)),
                ('last_login_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='myuser_cust_email_20e71e_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['username'], name='myuser_cust_usernam_60c489_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['is_active'], name='myuser_cust_is_acti_709443_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['is_verified'], name='myuser_cust_is_veri_fe3686_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['created_at'], name='myuser_cust_created_a365b6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='firebaseapp',
            unique_together={('user', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='fcmdevice',
            unique_together={('firebase_app', 'token')},
        ),
    ]
